{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/naut-packs/naut-packs.component.ts","webpack:///src/app/naut-packs/naut-packs.component.html","webpack:///src/app/naut-picker/naut-picker.component.ts","webpack:///src/app/naut-picker/naut-picker.component.html","webpack:///src/app/naut/naut.component.ts","webpack:///src/app/naut/naut.component.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/services/naut-data.service.ts","webpack:///src/app/user-preferences/user-preferences.component.ts","webpack:///src/app/user-preferences/user-preferences.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoginComponent","NautPacksComponent","nautDataService","thynixNautPack","getRandomNautsPack","haspNautPack","mathmaticalNautPack","mlripperNautPack","qazwodeNautPack","player","newGame","reroll","NautPickerComponent","activatedRoute","queryParams","subscribe","displayNautList","allNauts","NautState","NautComponent","name","src","isGolden","rarity","redState","Unselected","blueState","console","log","Banned","toggleRedNaut","toggleBlueNaut","PageNotFoundComponent","NautDataService","debug","playerNauts","forEach","naut","nauts","getNautsForPlayer","legendaryNauts","tier","epicNauts","rareNauts","shuffledLegendaryNauts","shuffledEpicNauts","shuffledRareNauts","nautPoolRolls","nautPool","roll","pop","hasLegendaryOrEpicNauts","goldPlatingIndex","providedIn","UserPreferencesComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NautPickerComponent } from './naut-picker/naut-picker.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { UserPreferencesComponent } from './user-preferences/user-preferences.component';\r\nimport { NautPacksComponent } from './naut-packs/naut-packs.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'naut-picker',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'naut-picker',\r\n    component: NautPickerComponent,\r\n  },\r\n  {\r\n    path: 'naut-packs',\r\n    component: NautPacksComponent,\r\n  },\r\n  {\r\n    path: 'user-pref',\r\n    component: UserPreferencesComponent,\r\n  },\r\n  {\r\n    path: '**/*',\r\n    component: PageNotFoundComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ad-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'awesomenauts-drafter';\r\n}\r\n","<div class=\"awesomenauts-drafter-container docs-app-background\">\r\n  <mat-toolbar color=\"primary\"><span>Awesomenauts Drafter</span> <a mat-button class=\"links\" routerLink=\"/\">Standard</a><a mat-button class=\"links\" routerLink=\"/naut-packs\">Packs</a></mat-toolbar>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NautPickerComponent } from './naut-picker/naut-picker.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\n// import {MatBadgeModule} from '@angular/material/badge';\r\n// import {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n// import {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n// import {MatCardModule} from '@angular/material/card';\r\n// import {MatCheckboxModule} from '@angular/material/checkbox';\r\n// import {MatChipsModule} from '@angular/material/chips';\r\n// import {MatStepperModule} from '@angular/material/stepper';\r\n// import {MatDatepickerModule} from '@angular/material/datepicker';\r\n// import {MatDialogModule} from '@angular/material/dialog';\r\n// import {MatDividerModule} from '@angular/material/divider';\r\n// import {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n// import {MatInputModule} from '@angular/material/input';\r\n// import {MatListModule} from '@angular/material/list';\r\n// import {MatMenuModule} from '@angular/material/menu';\r\n// import {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\n// import {MatPaginatorModule} from '@angular/material/paginator';\r\n// import {MatProgressBarModule} from '@angular/material/progress-bar';\r\n// import {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n// import {MatRadioModule} from '@angular/material/radio';\r\n// import {MatSelectModule} from '@angular/material/select';\r\n// import {MatSidenavModule} from '@angular/material/sidenav';\r\n// import {MatSliderModule} from '@angular/material/slider';\r\n// import {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n// import {MatSnackBarModule} from '@angular/material/snack-bar';\r\n// import {MatSortModule} from '@angular/material/sort';\r\n// import {MatTableModule} from '@angular/material/table';\r\n// import {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n// import {MatTooltipModule} from '@angular/material/tooltip';\r\n// import {MatTreeModule} from '@angular/material/tree';\r\nimport { NautComponent } from './naut/naut.component';\r\nimport { UserPreferencesComponent } from './user-preferences/user-preferences.component';\r\nimport { NautDataService } from './services/naut-data.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NautPacksComponent } from './naut-packs/naut-packs.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NautPickerComponent,\r\n    NautPacksComponent,\r\n    PageNotFoundComponent,\r\n    NautComponent,\r\n    UserPreferencesComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n  ],\r\n  providers: [\r\n    NautDataService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ad-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Naut } from '../services/naut';\r\nimport { NautDataService } from '../services/naut-data.service';\r\nimport { isNil } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'ad-naut-packs',\r\n  templateUrl: './naut-packs.component.html',\r\n  styleUrls: ['./naut-packs.component.css']\r\n})\r\nexport class NautPacksComponent implements OnInit {\r\n\r\n  thynixNautPack: Naut[];\r\n  haspNautPack: Naut[];\r\n  mathmaticalNautPack: Naut[];\r\n  mlripperNautPack: Naut[];\r\n  qazwodeNautPack: Naut[];\r\n\r\n  constructor(\r\n    private nautDataService: NautDataService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.thynixNautPack = this.nautDataService.getRandomNautsPack('thynix');\r\n    this.haspNautPack = this.nautDataService.getRandomNautsPack('hasp');\r\n    this.mathmaticalNautPack = this.nautDataService.getRandomNautsPack('mathmatical');\r\n    this.mlripperNautPack = this.nautDataService.getRandomNautsPack('mlripper');\r\n    this.qazwodeNautPack = this.nautDataService.getRandomNautsPack('qazwode');\r\n  }\r\n\r\n  newGame(): void {\r\n    this.thynixNautPack = this.nautDataService.getRandomNautsPack('thynix');\r\n    this.haspNautPack = this.nautDataService.getRandomNautsPack('hasp');\r\n    this.mathmaticalNautPack = this.nautDataService.getRandomNautsPack('mathmatical');\r\n    this.mlripperNautPack = this.nautDataService.getRandomNautsPack('mlripper');\r\n    this.qazwodeNautPack = this.nautDataService.getRandomNautsPack('qazwode');\r\n  }\r\n\r\n  reroll(player: string): void {\r\n    if (player === 'thynix') {\r\n      this.thynixNautPack = this.nautDataService.getRandomNautsPack('thynix');\r\n    }\r\n    if (player === 'hasp') {\r\n      this.haspNautPack = this.nautDataService.getRandomNautsPack('hasp');\r\n    }\r\n    if (player === 'mathmatical') {\r\n      this.mathmaticalNautPack = this.nautDataService.getRandomNautsPack('mathmatical');\r\n    }\r\n    if (player === 'mlripper') {\r\n      this.mlripperNautPack = this.nautDataService.getRandomNautsPack('mlripper');\r\n    }\r\n    if (player === 'qazwode') {\r\n      this.qazwodeNautPack = this.nautDataService.getRandomNautsPack('qazwode');\r\n    }\r\n  }\r\n}\r\n","<div class=\"naut-picker mat-body\">\r\n    <div>\r\n        <button mat-button class=\"naut-picker__new-game\" (click)=\"newGame()\">New Game</button>\r\n    </div>\r\n\r\n    <div><h2 mat-h2>Thynix</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('thynix')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of thynixNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <div><h2 mat-h2>Hasp</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('hasp')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of haspNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>           \r\n\r\n    <div><h2 mat-h2>Mathmatical</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('mathmatical')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of mathmaticalNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <div><h2 mat-h2>Mlripper</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('mlripper')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of mlripperNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <div><h2 mat-h2>Qazwode</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('qazwode')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of qazwodeNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Naut } from '../services/naut';\r\nimport { NautDataService } from '../services/naut-data.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { isNil } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'ad-naut-picker',\r\n  templateUrl: './naut-picker.component.html',\r\n  styleUrls: ['./naut-picker.component.css']\r\n})\r\nexport class NautPickerComponent implements OnInit {\r\n\r\n  displayNautList: Naut[];\r\n\r\n  constructor(\r\n    private nautDataService: NautDataService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.activatedRoute.queryParams.subscribe((queryParams) => {\r\n        if (!isNil(queryParams.player)) {\r\n          this.displayNautList = this.nautDataService.getRandomNautsPack(queryParams.player);\r\n        } else {\r\n          this.displayNautList = this.nautDataService.allNauts;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"naut-picker mat-body\">\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"7\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of displayNautList\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nenum NautState {\r\n  Unselected = 0,\r\n  Selected,\r\n  Banned,\r\n}\r\n\r\n@Component({\r\n  selector: 'ad-naut',\r\n  templateUrl: './naut.component.html',\r\n  styleUrls: ['./naut.component.css']\r\n})\r\nexport class NautComponent implements OnInit {\r\n  @Input() name: string = '';\r\n  @Input() src: string = '';\r\n  @Input() isGolden = false;\r\n  @Input() rarity = 'rare';\r\n\r\n  redState = NautState.Unselected;\r\n  blueState = NautState.Unselected;\r\n  NautState = NautState;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleRedNaut(): void {\r\n    console.log(this.redState);\r\n    this.redState = (this.redState + 1) % (NautState.Banned + 1);\r\n  }\r\n\r\n  /** Return false to stop the propagation to context menu click */\r\n  toggleBlueNaut(): boolean {\r\n    console.log(this.blueState);\r\n    this.blueState = (this.blueState + 1) % (NautState.Banned + 1);\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"naut\">\r\n    <button mat-button (click)=\"toggleRedNaut()\" (contextmenu)=\"toggleBlueNaut()\">\r\n        <div class=\"naut__golden\" *ngIf=\"isGolden\"></div>\r\n        <div class=\"naut__red\" *ngIf=\"redState === NautState.Banned || redState === NautState.Selected\">\r\n            <mat-icon class=\"naut__red-banned\" *ngIf=\"redState === NautState.Banned\" aria-hidden=\"false\" aria-label=\"Banned\">close</mat-icon>\r\n            <mat-icon class=\"naut__red-selected\" *ngIf=\"redState === NautState.Selected\" aria-hidden=\"false\" aria-label=\"Selected\">check</mat-icon>\r\n        </div>\r\n        <div class=\"naut__blue\" *ngIf=\"blueState === NautState.Banned || blueState === NautState.Selected\">\r\n            <mat-icon class=\"naut__blue-banned\" *ngIf=\"blueState === NautState.Banned\" aria-hidden=\"false\" aria-label=\"Banned\">close</mat-icon>\r\n            <mat-icon class=\"naut__blue-selected\" *ngIf=\"blueState === NautState.Selected\" aria-hidden=\"false\" aria-label=\"Selected\">check</mat-icon>\r\n        </div>\r\n        <div class=\"naut__epic\" *ngIf=\"rarity === 'epic'\">\r\n            <mat-icon class=\"naut__epic-icon\" aria-hidden=\"false\" aria-label=\"radio_button_unchecked\">radio_button_unchecked</mat-icon>\r\n        </div>\r\n        <div class=\"naut__legendary\" *ngIf=\"rarity === 'legendary'\">\r\n            <mat-icon class=\"naut__legendary-icon\" aria-hidden=\"false\" aria-label=\"star_outline\">star_outline</mat-icon>\r\n        </div>\r\n        <img class=\"naut__img\"\r\n            [src]=\"src\"\r\n            [alt]=\"name\" />\r\n    </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ad-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"page--center\">\r\n    <h1 class=\"mat-h1\">Page Not Found</h1>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { get, filter, shuffle, random, map, flatten, union, includes, some, isNil } from 'lodash';\nimport { Naut } from './naut';\nimport * as nautJsonData from './naut-data.json';\nimport * as haspData from './hasp.json';\nimport * as mathmaticalData from './mathmatical.json';\nimport * as mlripperData from './mlripper.json';\nimport * as thynixData from './thynix.json';\nimport * as qazwodeData from './qazwode.json';\nimport { mapToMapExpression } from '@angular/compiler/src/render3/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NautDataService {\n\n  allNauts: Naut[];\n\n  constructor() {\n    this.allNauts = get(nautJsonData, 'default', []) as Naut[];\n    console.debug('nauts: ', this.allNauts);\n  }\n\n  getNautsForPlayer(player: string): Naut[] {\n    let playerNauts = [];\n    if (player === 'hasp') {\n      playerNauts = get(haspData, 'default', []) as Naut[];\n    }\n    if (player === 'mathmatical') {\n      playerNauts = get(mathmaticalData, 'default', []) as Naut[];\n    }\n    if (player === 'mlripper') {\n      playerNauts = get(mlripperData, 'default', []) as Naut[];\n    }\n    if (player === 'thynix') {\n      playerNauts = get(thynixData, 'default', []) as Naut[];\n    }\n    if (player === 'qazwode') {\n      playerNauts = get(qazwodeData, 'default', []) as Naut[];\n    }\n    // Remove any golden flags\n    playerNauts.forEach((naut) => {\n      naut.isGolden = false;\n    });\n    return playerNauts;\n  }\n\n  getRandomNautsPack(player: string) {\n    const nauts = this.getNautsForPlayer(player);\n\n    const legendaryNauts = filter(nauts, (naut) => naut.tier === 'legendary') || [];\n    const epicNauts = filter(nauts, (naut) => naut.tier === 'epic') || [];\n    const rareNauts = filter(nauts, (naut) => naut.tier !== 'legendary' && naut.tier !== 'epic' && naut.tier !== 'common') || [];\n\n    const shuffledLegendaryNauts = shuffle(legendaryNauts);\n    const shuffledEpicNauts = shuffle(epicNauts);\n    const shuffledRareNauts = shuffle(rareNauts);\n\n    const nautPoolRolls = [\n      random(20),\n      random(20),\n      random(20),\n      random(20),\n      random(20),\n    ];\n\n    const nautPool = map(nautPoolRolls, (roll) => {\n      if (roll === 19) {\n        return shuffledLegendaryNauts.pop();\n      } else if (includes([15, 16, 17, 18], roll)) {\n        return shuffledEpicNauts.pop();\n      } else {\n        return shuffledRareNauts.pop();\n      }\n    });\n\n    const hasLegendaryOrEpicNauts = some(nautPool, (naut) => naut && (naut.tier === 'legendary' || naut.tier === 'epic'));\n\n    if (!hasLegendaryOrEpicNauts) {\n      nautPool[0] = shuffledEpicNauts.pop();\n    }\n\n    // Add golden plating\n    const goldPlatingIndex = random(15);\n    if (!isNil(nautPool[goldPlatingIndex]) && nautPool[goldPlatingIndex].tier !== 'legendary') {\n      nautPool[goldPlatingIndex].isGolden = true;\n    }\n\n    return nautPool;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NautDataService } from '../services/naut-data.service';\nimport { Naut } from '../services/naut';\n\n@Component({\n  selector: 'ad-user-preferences',\n  templateUrl: './user-preferences.component.html',\n  styleUrls: ['./user-preferences.component.css']\n})\nexport class UserPreferencesComponent implements OnInit {\n\n  displayNautList: Naut[];\n\n  constructor(\n    private nautDataService: NautDataService,\n  ) { }\n\n  ngOnInit(): void {\n      this.displayNautList = this.nautDataService.allNauts;\n  }\n\n}\n","<div class=\"naut-picker mat-body\">\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"7\" rowHeight=\"1:1\">\n        <mat-grid-tile *ngFor=\"let naut of displayNautList\">\n            <ad-naut [name]=\"naut.name\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}