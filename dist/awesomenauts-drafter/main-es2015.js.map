{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/naut-packs/naut-packs.component.ts","./src/app/naut-packs/naut-packs.component.html","./src/app/naut-picker/naut-picker.component.ts","./src/app/naut-picker/naut-picker.component.html","./src/app/naut/naut.component.ts","./src/app/naut/naut.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/services/naut-data.service.ts","./src/app/user-preferences/user-preferences.component.ts","./src/app/user-preferences/user-preferences.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NautPickerComponent } from './naut-picker/naut-picker.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { UserPreferencesComponent } from './user-preferences/user-preferences.component';\r\nimport { NautPacksComponent } from './naut-packs/naut-packs.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'naut-picker',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'naut-picker',\r\n    component: NautPickerComponent,\r\n  },\r\n  {\r\n    path: 'naut-packs',\r\n    component: NautPacksComponent,\r\n  },\r\n  {\r\n    path: 'user-pref',\r\n    component: UserPreferencesComponent,\r\n  },\r\n  {\r\n    path: '**/*',\r\n    component: PageNotFoundComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ad-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'awesomenauts-drafter';\r\n}\r\n","<div class=\"awesomenauts-drafter-container docs-app-background\">\r\n  <mat-toolbar color=\"primary\"><span>Awesomenauts Drafter</span> <a mat-button class=\"links\" routerLink=\"/\">Standard</a><a mat-button class=\"links\" routerLink=\"/naut-packs\">Packs</a></mat-toolbar>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NautPickerComponent } from './naut-picker/naut-picker.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\n// import {MatBadgeModule} from '@angular/material/badge';\r\n// import {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n// import {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n// import {MatCardModule} from '@angular/material/card';\r\n// import {MatCheckboxModule} from '@angular/material/checkbox';\r\n// import {MatChipsModule} from '@angular/material/chips';\r\n// import {MatStepperModule} from '@angular/material/stepper';\r\n// import {MatDatepickerModule} from '@angular/material/datepicker';\r\n// import {MatDialogModule} from '@angular/material/dialog';\r\n// import {MatDividerModule} from '@angular/material/divider';\r\n// import {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n// import {MatInputModule} from '@angular/material/input';\r\n// import {MatListModule} from '@angular/material/list';\r\n// import {MatMenuModule} from '@angular/material/menu';\r\n// import {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\n// import {MatPaginatorModule} from '@angular/material/paginator';\r\n// import {MatProgressBarModule} from '@angular/material/progress-bar';\r\n// import {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n// import {MatRadioModule} from '@angular/material/radio';\r\n// import {MatSelectModule} from '@angular/material/select';\r\n// import {MatSidenavModule} from '@angular/material/sidenav';\r\n// import {MatSliderModule} from '@angular/material/slider';\r\n// import {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n// import {MatSnackBarModule} from '@angular/material/snack-bar';\r\n// import {MatSortModule} from '@angular/material/sort';\r\n// import {MatTableModule} from '@angular/material/table';\r\n// import {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n// import {MatTooltipModule} from '@angular/material/tooltip';\r\n// import {MatTreeModule} from '@angular/material/tree';\r\nimport { NautComponent } from './naut/naut.component';\r\nimport { UserPreferencesComponent } from './user-preferences/user-preferences.component';\r\nimport { NautDataService } from './services/naut-data.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NautPacksComponent } from './naut-packs/naut-packs.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NautPickerComponent,\r\n    NautPacksComponent,\r\n    PageNotFoundComponent,\r\n    NautComponent,\r\n    UserPreferencesComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n  ],\r\n  providers: [\r\n    NautDataService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ad-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Naut } from '../services/naut';\r\nimport { NautDataService } from '../services/naut-data.service';\r\nimport { isNil } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'ad-naut-packs',\r\n  templateUrl: './naut-packs.component.html',\r\n  styleUrls: ['./naut-packs.component.css']\r\n})\r\nexport class NautPacksComponent implements OnInit {\r\n\r\n  thynixNautPack: Naut[];\r\n  haspNautPack: Naut[];\r\n  mathmaticalNautPack: Naut[];\r\n  mlripperNautPack: Naut[];\r\n\r\n  constructor(\r\n    private nautDataService: NautDataService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.thynixNautPack = this.nautDataService.getRandomNautsPack('thynix');\r\n    this.haspNautPack = this.nautDataService.getRandomNautsPack('hasp');\r\n    this.mathmaticalNautPack = this.nautDataService.getRandomNautsPack('mathmatical');\r\n    this.mlripperNautPack = this.nautDataService.getRandomNautsPack('mlripper');\r\n  }\r\n\r\n  newGame(): void {\r\n    this.thynixNautPack = this.nautDataService.getRandomNautsPack('thynix');\r\n    this.haspNautPack = this.nautDataService.getRandomNautsPack('hasp');\r\n    this.mathmaticalNautPack = this.nautDataService.getRandomNautsPack('mathmatical');\r\n    this.mlripperNautPack = this.nautDataService.getRandomNautsPack('mlripper');\r\n  }\r\n\r\n  reroll(player: string): void {\r\n    if (player === 'thynix') {\r\n      this.thynixNautPack = this.nautDataService.getRandomNautsPack('thynix');\r\n    }\r\n    if (player === 'hasp') {\r\n      this.haspNautPack = this.nautDataService.getRandomNautsPack('hasp');\r\n    }\r\n    if (player === 'mathmatical') {\r\n      this.mathmaticalNautPack = this.nautDataService.getRandomNautsPack('mathmatical');\r\n    }\r\n    if (player === 'mlripper') {\r\n      this.mlripperNautPack = this.nautDataService.getRandomNautsPack('mlripper');\r\n    }\r\n  }\r\n}\r\n","<div class=\"naut-picker mat-body\">\r\n    <div>\r\n        <button mat-button class=\"naut-picker__new-game\" (click)=\"newGame()\">New Game</button>\r\n    </div>\r\n\r\n    <div><h2 mat-h2>Thynix</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('thynix')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of thynixNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <div><h2 mat-h2>Hasp</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('hasp')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of haspNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>           \r\n\r\n    <div><h2 mat-h2>Mathmatical</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('mathmatical')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of mathmaticalNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <div><h2 mat-h2>Mlripper</h2> <button mat-button class=\"naut-picker__reroll\" (click)=\"reroll('mlripper')\">Reroll</button></div>\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"5\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of mlripperNautPack\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [isGolden]=\"naut.isGolden\" [rarity]=\"naut.tier\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Naut } from '../services/naut';\r\nimport { NautDataService } from '../services/naut-data.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { isNil } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'ad-naut-picker',\r\n  templateUrl: './naut-picker.component.html',\r\n  styleUrls: ['./naut-picker.component.css']\r\n})\r\nexport class NautPickerComponent implements OnInit {\r\n\r\n  displayNautList: Naut[];\r\n\r\n  constructor(\r\n    private nautDataService: NautDataService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.activatedRoute.queryParams.subscribe((queryParams) => {\r\n        if (!isNil(queryParams.player)) {\r\n          this.displayNautList = this.nautDataService.getRandomNautsPack(queryParams.player);\r\n        } else {\r\n          this.displayNautList = this.nautDataService.allNauts;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"naut-picker mat-body\">\r\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"7\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let naut of displayNautList\">\r\n            <ad-naut *ngIf=\"naut\" [name]=\"naut.name\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nenum NautState {\r\n  Unselected = 0,\r\n  Selected,\r\n  Banned,\r\n}\r\n\r\n@Component({\r\n  selector: 'ad-naut',\r\n  templateUrl: './naut.component.html',\r\n  styleUrls: ['./naut.component.css']\r\n})\r\nexport class NautComponent implements OnInit {\r\n  @Input() name: string = '';\r\n  @Input() src: string = '';\r\n  @Input() isGolden = false;\r\n  @Input() rarity = 'rare';\r\n\r\n  redState = NautState.Unselected;\r\n  blueState = NautState.Unselected;\r\n  NautState = NautState;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleRedNaut(): void {\r\n    console.log(this.redState);\r\n    this.redState = (this.redState + 1) % (NautState.Banned + 1);\r\n  }\r\n\r\n  /** Return false to stop the propagation to context menu click */\r\n  toggleBlueNaut(): boolean {\r\n    console.log(this.blueState);\r\n    this.blueState = (this.blueState + 1) % (NautState.Banned + 1);\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"naut\">\r\n    <button mat-button (click)=\"toggleRedNaut()\" (contextmenu)=\"toggleBlueNaut()\">\r\n        <div class=\"naut__golden\" *ngIf=\"isGolden\"></div>\r\n        <div class=\"naut__red\" *ngIf=\"redState === NautState.Banned || redState === NautState.Selected\">\r\n            <mat-icon class=\"naut__red-banned\" *ngIf=\"redState === NautState.Banned\" aria-hidden=\"false\" aria-label=\"Banned\">close</mat-icon>\r\n            <mat-icon class=\"naut__red-selected\" *ngIf=\"redState === NautState.Selected\" aria-hidden=\"false\" aria-label=\"Selected\">check</mat-icon>\r\n        </div>\r\n        <div class=\"naut__blue\" *ngIf=\"blueState === NautState.Banned || blueState === NautState.Selected\">\r\n            <mat-icon class=\"naut__blue-banned\" *ngIf=\"blueState === NautState.Banned\" aria-hidden=\"false\" aria-label=\"Banned\">close</mat-icon>\r\n            <mat-icon class=\"naut__blue-selected\" *ngIf=\"blueState === NautState.Selected\" aria-hidden=\"false\" aria-label=\"Selected\">check</mat-icon>\r\n        </div>\r\n        <div class=\"naut__epic\" *ngIf=\"rarity === 'epic'\">\r\n            <mat-icon class=\"naut__epic-icon\" aria-hidden=\"false\" aria-label=\"radio_button_unchecked\">radio_button_unchecked</mat-icon>\r\n        </div>\r\n        <div class=\"naut__legendary\" *ngIf=\"rarity === 'legendary'\">\r\n            <mat-icon class=\"naut__legendary-icon\" aria-hidden=\"false\" aria-label=\"star_outline\">star_outline</mat-icon>\r\n        </div>\r\n        <img class=\"naut__img\"\r\n            [src]=\"src\"\r\n            [alt]=\"name\" />\r\n    </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ad-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"page--center\">\r\n    <h1 class=\"mat-h1\">Page Not Found</h1>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { get, filter, shuffle, random, map, flatten, union, includes, some, isNil } from 'lodash';\nimport { Naut } from './naut';\nimport * as nautJsonData from './naut-data.json';\nimport * as haspData from './hasp.json';\nimport * as mathmaticalData from './mathmatical.json';\nimport * as mlripperData from './mlripper.json';\nimport * as thynixData from './thynix.json';\nimport { mapToMapExpression } from '@angular/compiler/src/render3/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NautDataService {\n\n  allNauts: Naut[];\n\n  constructor() {\n    this.allNauts = get(nautJsonData, 'default', []) as Naut[];\n    console.debug('nauts: ', this.allNauts);\n  }\n\n  getNautsForPlayer(player: string): Naut[] {\n    let playerNauts = [];\n    if (player === 'hasp') {\n      playerNauts = get(haspData, 'default', []) as Naut[];\n    }\n    if (player === 'mathmatical') {\n      playerNauts = get(mathmaticalData, 'default', []) as Naut[];\n    }\n    if (player === 'mlripper') {\n      playerNauts = get(mlripperData, 'default', []) as Naut[];\n    }\n    if (player === 'thynix') {\n      playerNauts = get(thynixData, 'default', []) as Naut[];\n    }\n    // Remove any golden flags\n    playerNauts.forEach((naut) => {\n      naut.isGolden = false;\n    });\n    return playerNauts;\n  }\n\n  getRandomNautsPack(player: string) {\n    const nauts = this.getNautsForPlayer(player);\n\n    const legendaryNauts = filter(nauts, (naut) => naut.tier === 'legendary') || [];\n    const epicNauts = filter(nauts, (naut) => naut.tier === 'epic') || [];\n    const rareNauts = filter(nauts, (naut) => naut.tier !== 'legendary' && naut.tier !== 'epic' && naut.tier !== 'common') || [];\n\n    const shuffledLegendaryNauts = shuffle(legendaryNauts);\n    const shuffledEpicNauts = shuffle(epicNauts);\n    const shuffledRareNauts = shuffle(rareNauts);\n\n    const nautPoolRolls = [\n      random(20),\n      random(20),\n      random(20),\n      random(20),\n      random(20),\n    ];\n\n    const nautPool = map(nautPoolRolls, (roll) => {\n      if (roll === 19) {\n        return shuffledLegendaryNauts.pop();\n      } else if (includes([15, 16, 17, 18], roll)) {\n        return shuffledEpicNauts.pop();\n      } else {\n        return shuffledRareNauts.pop();\n      }\n    });\n\n    const hasLegendaryOrEpicNauts = some(nautPool, (naut) => naut && (naut.tier === 'legendary' || naut.tier === 'epic'));\n\n    if (!hasLegendaryOrEpicNauts) {\n      nautPool[0] = shuffledEpicNauts.pop();\n    }\n\n    // Add golden plating\n    const goldPlatingIndex = random(15);\n    if (!isNil(nautPool[goldPlatingIndex]) && nautPool[goldPlatingIndex].tier !== 'legendary') {\n      nautPool[goldPlatingIndex].isGolden = true;\n    }\n\n    return nautPool;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NautDataService } from '../services/naut-data.service';\nimport { Naut } from '../services/naut';\n\n@Component({\n  selector: 'ad-user-preferences',\n  templateUrl: './user-preferences.component.html',\n  styleUrls: ['./user-preferences.component.css']\n})\nexport class UserPreferencesComponent implements OnInit {\n\n  displayNautList: Naut[];\n\n  constructor(\n    private nautDataService: NautDataService,\n  ) { }\n\n  ngOnInit(): void {\n      this.displayNautList = this.nautDataService.allNauts;\n  }\n\n}\n","<div class=\"naut-picker mat-body\">\n    <mat-grid-list class=\"naut-picker__grid\" cols=\"7\" rowHeight=\"1:1\">\n        <mat-grid-tile *ngFor=\"let naut of displayNautList\">\n            <ad-naut [name]=\"naut.name\" [src]=\"'assets/nauts/' + naut.id +'.png'\"></ad-naut>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}